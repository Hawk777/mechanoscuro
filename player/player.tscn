[gd_scene load_steps=12 format=2]

[ext_resource path="res://player/idle.png" type="Texture" id=1]
[ext_resource path="res://explosion.png" type="Texture" id=2]

[sub_resource type="AtlasTexture" id=3]
flags = 4
atlas = ExtResource( 1 )
region = Rect2( 0, 0, 64, 64 )

[sub_resource type="AtlasTexture" id=4]
flags = 4
atlas = ExtResource( 1 )
region = Rect2( 64, 0, 64, 64 )

[sub_resource type="AtlasTexture" id=5]
flags = 4
atlas = ExtResource( 1 )
region = Rect2( 128, 0, 64, 64 )

[sub_resource type="AtlasTexture" id=7]
flags = 4
atlas = ExtResource( 2 )
region = Rect2( 0, 0, 64, 64 )

[sub_resource type="AtlasTexture" id=8]
flags = 4
atlas = ExtResource( 2 )
region = Rect2( 64, 0, 64, 64 )

[sub_resource type="AtlasTexture" id=9]
flags = 4
atlas = ExtResource( 2 )
region = Rect2( 128, 0, 64, 64 )

[sub_resource type="SpriteFrames" id=2]
animations = [ {
"frames": [ SubResource( 3 ), SubResource( 4 ), SubResource( 5 ) ],
"loop": true,
"name": "idle",
"speed": 5.0
}, {
"frames": [ SubResource( 7 ), SubResource( 8 ), SubResource( 9 ) ],
"loop": false,
"name": "explode",
"speed": 5.0
} ]

[sub_resource type="GDScript" id=10]
script/source = "extends AnimatedSprite

signal moved()
signal death_started()
signal death_finished()

export(NodePath) var tile_grid_path: NodePath

var _alive := true

onready var _tile_grid := get_node(tile_grid_path) as TileGrid


func _ready() -> void:
	_tile_grid.get_tilev(_tile_grid.world_to_map(_tile_grid.to_local(global_position))).occupant = self


func _unhandled_input(event: InputEvent) -> void:
	if _alive:
		var motion := Vector2.ZERO
		if event.is_action_pressed(\"move_down\"):
			motion = Vector2(0, Constants.TILE_SIZE)
		elif event.is_action_pressed(\"move_up\"):
			motion = Vector2(0, -Constants.TILE_SIZE)
		elif event.is_action_pressed(\"move_left\"):
			motion = Vector2(-Constants.TILE_SIZE, 0)
		elif event.is_action_pressed(\"move_right\"):
			motion = Vector2(Constants.TILE_SIZE, 0)
		if motion != Vector2.ZERO:
			var new_pos := global_position + motion
			var new_grid := _tile_grid.world_to_map(_tile_grid.to_local(new_pos))
			if _tile_grid.coord_is_passable(new_grid.x, new_grid.y):
				var old_grid := _tile_grid.world_to_map(_tile_grid.to_local(global_position))
				global_position = new_pos
				_tile_grid.get_tilev(old_grid).occupant = null
				var new_tile := _tile_grid.get_tilev(new_grid)
				if new_tile.occupant == null:
					new_tile.occupant = self
					emit_signal(\"moved\")
				else:
					kill()


func kill() -> void:
	if _alive:
		_alive = false
		_tile_grid.get_tilev(_tile_grid.world_to_map(_tile_grid.to_local(global_position))).occupant = null
		emit_signal(\"death_started\")
		self.play(\"explode\")
		yield(self, \"animation_finished\")
		self.visible = false
		emit_signal(\"death_finished\")
"

[sub_resource type="RectangleShape2D" id=6]
extents = Vector2( 32, 32 )

[node name="Node2D2" type="AnimatedSprite"]
position = Vector2( 0, -1 )
frames = SubResource( 2 )
animation = "idle"
frame = 2
playing = true
centered = false
script = SubResource( 10 )

[node name="Area2D" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="Area2D"]
position = Vector2( 32, 32 )
shape = SubResource( 6 )

[node name="Camera2D" type="Camera2D" parent="."]
position = Vector2( 32, 32 )
current = true
limit_left = -32
limit_top = -32
drag_margin_h_enabled = true
drag_margin_v_enabled = true
